# frozen_string_literal: true — это волшебный комментарий, впервые поддерживаемый в Ruby 2.3, который сообщает Ruby, что все строковые литералы в файле неявно заморожены, как если бы для каждого из них был вызван #freeze. То есть, если строковый литерал определен в файле с этим комментарием, и вы вызываете метод для этой строки, который изменяет его, например <<, вы получите RuntimeError: не можете изменить замороженную строку.

В Ruby 2.3 запускайте с флагом --enable=frozen-string-literal, а в Ruby 3 строковые литералы замораживаются во всех файлах.

Если вы хотите, чтобы строковый литерал был изменяемым независимо от глобальной настройки или настройки для каждого файла, вы можете добавить к нему префикс унарного оператора + (будьте осторожны с приоритетом оператора) или вызвать для него .dup:
# frozen_string_literal: true
"".frozen?
=> true
(+"").frozen?
=> false
"".dup.frozen?
=> false

Вы также можете заморозить изменяемую (размороженную) строку с помощью унарного -.
------------------------------------------------------
Зачем?
Это повышает производительность приложения, не выделяя новое пространство для одной и той же строки, тем самым также экономя время на рутинную сборку мусора. Как? когда вы замораживаете строковый литерал (строковый объект), вы говорите Ruby, чтобы ни одна из ваших программ не изменяла строковый литерал (объект).


1. Замораживая строковые литералы, вы не выделяете для них новое пространство памяти.
Пример:

Без магического комментария выделяет новое пространство для той же строки (обратите внимание на напечатанные идентификаторы разных объектов)
def hello_id
  a = 'hello'
  a.object_id
end

puts hello_id   #=> 70244568358640
puts hello_id   #=> 70244568358500
С волшебным комментарием ruby выделяет место только один раз
# frozen_string_literal: true

def hello_id
  a = 'hello'
  a.object_id
end

puts hello_id   #=> 70244568358640
puts hello_id   #=> 70244568358640

2. Замораживая строковые литералы, ваша программа будет вызывать исключение при попытке изменить строковый литерал.
Пример:

Без магического комментария вы можете изменить строковые литералы.
name = 'Johny'
name << ' Cash'

puts name     #=> Johny Cash
С волшебным комментарием будет вызвано исключение при изменении строковых литералов.
# frozen_string_literal: true

name = 'john'
name << ' cash'  #=> `<main>': can't modify frozen String (FrozenError)

puts name  
------------------------------------------------------------
























