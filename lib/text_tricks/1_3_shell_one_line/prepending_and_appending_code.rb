# Если мы хотим сделать что-то только один раз — например, какой-то код начальной настройки или что-то в самом конце, чтобы подвести итог тому, над чем мы работали, — тогда нам не повезло. Переменные, которые мы инициализируем, будут инициализированы (и, следовательно, сброшены) в каждой строке. Все, что мы выводим, будет выводиться для каждой строки, а не только один раз в начале или конце.

# Если мы хотим выполнить какой-то код один и только один раз, в начале нашего скрипта мы можем использовать блоки BEGIN.
# Например, если мы хотим выводить число перед каждой строкой, начиная с 1:
printf "foo\nbar\nbaz\n" | \
ruby -ne 'BEGIN { i = 1 }; puts "#{i} #{$_}"; i += 1'
# или используя оператор условного присваивания:
printf "foo\nbar\nbaz\n" | \
ruby -ne 'i ||= 1; puts "#{i} #{$_}"; i += 1'

# Использование блоков END, если сделать что то по окончании, например вывести итог
printf "12\n76\n42" | \
ruby -ne 'BEGIN { n = 0 }; n += $_.to_i; END { puts n }'
# или другой пример с фильтацией
printf "a\nbb" | \
ruby -ne 'l ||= $_; l=$_ if $_.length > l.length; END { puts l }'