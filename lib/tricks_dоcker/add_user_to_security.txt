Создание пользователя в Docker-контейнере для повышения безопасности — это важный шаг в разработке безопасных приложений. По умолчанию Docker-контейнеры запускаются от имени пользователя `root`, что может представлять угрозу безопасности. Создание и использование непользовательского аккаунта снижает риски.

### 1. Создание пользователя в Dockerfile

Чтобы создать пользователя в контейнере, вы можете добавить соответствующие команды в `Dockerfile`:

```Dockerfile
# 1. Начните с базового образа
FROM ubuntu:latest

# 2. Обновите и установите необходимые пакеты
RUN apt-get update && apt-get install -y \
    sudo \
    && rm -rf /var/lib/apt/lists/*

# 3. Создайте нового пользователя и группу
RUN groupadd -r myuser && useradd -r -g myuser myuser

# 4. Создайте домашнюю директорию для пользователя и предоставьте права доступа
RUN mkdir /home/myuser && chown -R myuser:myuser /home/myuser

# 5. Смените пользователя на вновь созданного пользователя
USER myuser

# 6. Установите рабочую директорию
WORKDIR /home/myuser

# 7. Добавьте последующие команды, которые будут выполнены от имени нового пользователя
# Например, если это приложение на Node.js
COPY --chown=myuser:myuser . /home/myuser/app
WORKDIR /home/myuser/app
RUN npm install

# 8. Запустите приложение от имени нового пользователя
CMD ["npm", "start"]
```

### 2. Пояснение ключевых команд

- `groupadd -r myuser && useradd -r -g myuser myuser`: создаёт новую группу и нового системного пользователя с минимальными привилегиями.
- `USER myuser`: эта команда меняет пользователя на `myuser`, который будет использоваться для выполнения всех последующих команд в Dockerfile, включая запуск контейнера.
- `chown -R myuser:myuser /home/myuser`: команда изменяет владельца директории и всех её поддиректорий на `myuser`, чтобы пользователь мог к ним обращаться.

### 3. Запуск контейнера

Теперь, когда вы создадите и запустите контейнер, он будет работать от имени пользователя `myuser`, что обеспечит дополнительную безопасность:

```bash
docker build -t myapp .
docker run --name my_container myapp
```

### 4. Проверка текущего пользователя

Чтобы убедиться, что контейнер работает от имени нового пользователя, вы можете выполнить:

```bash
docker exec -it my_container whoami
```

Этот командный вывод покажет имя пользователя, под которым работает процесс внутри контейнера.

### Заключение

Создание и использование непользовательских аккаунтов в Docker-контейнерах — это лучшая практика, которая помогает защитить контейнеры и хост-систему от потенциальных атак. Это особенно важно для приложений, которые обрабатывают конфиденциальные данные или находятся в продуктивной среде.